# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\Shopery\Infrastructure\Persistence\Repository\InMemoryProductRepository: ~
    App\Shopery\Infrastructure\Persistence\Repository\InMemoryVariantRepository: ~

    App\Shopery\Domain\Product\Repository\ProductRepository: '@App\Shopery\Infrastructure\Persistence\Repository\InMemoryProductRepository'
    App\Shopery\Domain\Variant\Repository\VariantRepository: '@App\Shopery\Infrastructure\Persistence\Repository\InMemoryVariantRepository'

    App\Shopery\Application\Product\Create\CreateProductHandler:
        tags:
        - { name: command_handler, handles: 'App\Shopery\Application\Product\Create\CreateProductCommand' }

    App\Shopery\Application\Product\Update\UpdateName\UpdateNameProductHandler:
        tags:
        - { name: command_handler, handles: 'App\Shopery\Application\Product\Update\UpdateName\UpdateNameProductCommand' }

    App\Shopery\Application\Variant\Create\CreateVariantHandler:
        tags:
        - { name: command_handler, handles: 'App\Shopery\Application\Variant\Create\CreateVariantCommand' }

    App\Shopery\Application\Variant\Update\UpdatePricesVariant\UpdatePricesVariantHandler:
        tags:
        - { name: command_handler, handles: ' App\Shopery\Application\Variant\Update\UpdatePricesVariant\UpdatePricesVariantCommand' }

    App\Shopery\Application\Variant\Services\AverageOffers:
        arguments:
            $variantRepository: '@App\Shopery\Infrastructure\Persistence\Repository\InMemoryVariantRepository'

    App\Shopery\Application\Variant\Services\AveragePrices:
        arguments:
            $variantRepository: '@App\Shopery\Infrastructure\Persistence\Repository\InMemoryVariantRepository'